generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has storage model in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                 String?           @db.Uuid
  id                          String            @id @db.Uuid
  aud                         String?           @db.VarChar(255)
  role                        String?           @db.VarChar(255)
  email                       String?           @db.VarChar(255)
  encrypted_password          String?           @db.VarChar(255)
  email_confirmed_at          DateTime?         @db.Timestamptz(6)
  invited_at                  DateTime?         @db.Timestamptz(6)
  confirmation_token          String?           @db.VarChar(255)
  confirmation_sent_at        DateTime?         @db.Timestamptz(6)
  recovery_token              String?           @db.VarChar(255)
  recovery_sent_at            DateTime?         @db.Timestamptz(6)
  email_change_token_new      String?           @db.VarChar(255)
  email_change                String?           @db.VarChar(255)
  email_change_sent_at        DateTime?         @db.Timestamptz(6)
  last_sign_in_at             DateTime?         @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?         @db.Timestamptz(6)
  updated_at                  DateTime?         @db.Timestamptz(6)
  phone                       String?           @unique
  phone_confirmed_at          DateTime?         @db.Timestamptz(6)
  phone_change                String?           @default("")
  phone_change_token          String?           @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?         @db.Timestamptz(6)
  confirmed_at                DateTime?         @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?           @default("") @db.VarChar(255)
  email_change_confirm_status Int?              @default(0) @db.SmallInt
  banned_until                DateTime?         @db.Timestamptz(6)
  reauthentication_token      String?           @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?         @db.Timestamptz(6)
  is_sso_user                 Boolean           @default(false)
  deleted_at                  DateTime?         @db.Timestamptz(6)
  is_anonymous                Boolean           @default(false)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  one_time_tokens             one_time_tokens[]
  sessions                    sessions[]
  bonus_history               bonus_history[]

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

model admins {
  id    String @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  phone String @unique
  role  String @default("admin")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model auth_attempts {
  phone         String    @id
  attempt_count Int?      @default(0)
  last_attempt  DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model auth_codes {
  id         BigInt    @id @default(autoincrement())
  phone      String    @unique(map: "unique_phone")
  code       String
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  used       Boolean?  @default(false)

  @@index([phone], map: "idx_auth_codes_phone")
  @@schema("public")
}

model auth_logs {
  check_id   String    @id
  phone      String
  status     String
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  created_at DateTime  @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

model berries {
  id           Int      @id @default(autoincrement())
  name         String
  price        Int
  image_url    String?
  is_available Boolean? @default(true)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bonus_history {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String?   @db.Uuid
  reason     String?
  amount     Decimal?  @db.Decimal
  created_at DateTime? @default(now()) @db.Timestamp(6)
  bonus_id   String?   @db.Uuid
  phone      String?
  bonuses    bonuses?  @relation(fields: [bonus_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bonuses {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  phone         String          @unique(map: "bonuses_phone_idx")
  total_bonus   Int             @default(0)
  updated_at    DateTime?       @default(now()) @db.Timestamptz(6)
  bonus_balance Int?            @default(0)
  total_spent   Int?            @default(0)
  level         String?         @default("Бронзовый")
  bonus_history bonus_history[]

  @@schema("public")
}

model categories {
  id                 Int                  @id @default(autoincrement())
  name               String
  slug               String               @unique
  parent_id          Int?                 // Изменено с BigInt? на Int?
  is_visible         Boolean?             @default(true)
  categories         categories?          @relation("categoriesTocategories", fields: [parent_id], references: [id], onUpdate: NoAction)
  other_categories   categories[]         @relation("categoriesTocategories")
  product_categories product_categories[]
  subcategories      subcategories[]
  upsell_items       upsell_items[]

  @@index([id], map: "idx_categories_id")
  @@index([slug], map: "idx_categories_slug")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model corporate_images {
  id         Int       @id @default(autoincrement())
  url        String
  type       String
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model corporate_requests {
  id         Int       @id @default(autoincrement())
  name       String
  company    String?
  phone      String
  email      String
  message    String?
  created_at DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("public")
}

model customer_stories {
  id            Int      @id @default(autoincrement())
  photo_url     String
  review        String
  customer_name String
  date          DateTime @db.Date
  is_visible    Boolean? @default(true)

  @@schema("public")
}

model flowers {
  id           Int      @id @default(autoincrement())
  name         String
  price        Int
  image_url    String?
  is_available Boolean? @default(true)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model images {
  id         Int       @id @default(autoincrement())
  url        String
  alt        String?
  section    String
  created_at DateTime? @default(now()) @db.Timestamp(6)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model important_dates {
  id            String        @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  phone         String
  type          String
  date          DateTime?     @db.Date
  description   String?
  created_at    DateTime?     @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?     @default(now()) @db.Timestamptz(6)
  user_profiles user_profiles @relation(fields: [phone], references: [phone], onDelete: Cascade, onUpdate: NoAction, map: "fk_phone")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model order_items {
  id         String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  order_id   String?   @db.Uuid
  product_id Int?
  quantity   Int
  price      Int
  orders     orders?   @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products   products? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model orders {
  id                    String         @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  created_at            DateTime?      @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  phone                 String?
  whatsapp              Boolean?       @default(false)
  name                  String?
  recipient             String
  address               String
  items                 Json?
  total                 Decimal?       @db.Decimal
  bonus                 Int
  status                String?
  bonuses_used          Int?           @default(0)
  contact_name          String?
  delivery_date         String?
  delivery_time         String?
  payment_method        String?
  bonus_used            Decimal?       @default(0) @db.Decimal
  promo_id              String?        @db.Uuid
  promo_discount        Decimal?       @db.Decimal(10, 2)
  delivery_method       String?        @default("delivery")
  delivery_instructions String?
  postcard_text         String?
  promo_code            String?
  order_number          Int            @unique(map: "unique_order_number") @default(autoincrement())
  upsell_details        Json?          @default("[]")
  anonymous             Boolean?       @default(false)
  recipient_phone       String?
  user_id               String?        @db.Uuid
  order_items           order_items[]
  promo_codes           promo_codes?   @relation(fields: [promo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_promo_id")
  user_profiles         user_profiles? @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model packaging {
  id           Int      @id @default(autoincrement())
  name         String
  price        Int
  image_url    String?
  is_available Boolean? @default(true)

  @@schema("public")
}

model product_categories {
  product_id  Int
  category_id Int
  categories  categories @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products    products   @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([product_id, category_id])
  @@schema("public")
}

model product_subcategories {
  product_id     Int
  subcategory_id Int
  products       products      @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  subcategories  subcategories @relation(fields: [subcategory_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([product_id, subcategory_id])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model products {
  id                    Int                     @id @default(autoincrement())
  title                 String
  price                 Int
  image_url             String?
  created_at            DateTime?               @default(now()) @db.Timestamp(6)
  slug                  String?
  images                String[]
  in_stock              Boolean?                @default(true)
  bonus                 Decimal?                @db.Decimal
  short_desc            String?
  description           String?
  composition           String?
  is_popular            Boolean?                @default(false)
  discount_percent      Int?                    @default(0)
  is_visible            Boolean?                @default(true)
  original_price        Decimal?                @db.Decimal(10, 2)
  production_time       Int?
  order_index           Int?                    @default(0)
  order_items           order_items[]
  product_categories    product_categories[]
  product_subcategories product_subcategories[]

  @@index([id], map: "idx_products_id")
  @@index([in_stock], map: "idx_products_in_stock")
  @@index([is_popular], map: "idx_products_is_popular")
  @@index([is_visible], map: "idx_products_is_visible")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model promo_blocks {
  id          Int     @id @default(autoincrement())
  title       String
  href        String
  image_url   String
  type        String
  order_index Int?    @default(0)
  button_text String? @default("Подробнее")
  subtitle    String?

  @@index([order_index], map: "promo_blocks_order_idx")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model promo_codes {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  code           String    @unique
  discount       Int       @default(0)
  expires_at     DateTime? @db.Timestamptz(6)
  max_uses       Int?
  used_count     Int       @default(0)
  is_active      Boolean   @default(true)
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  page_href      String?
  discount_value Int       @default(0)
  discount_type  String    @default("fixed")
  orders         orders[]

  @@schema("public")
}

model settings {
  id         Int       @id @default(autoincrement())
  key        String    @unique
  value      String
  updated_at DateTime? @default(now()) @db.Timestamp(6)

  @@schema("public")
}

model site_pages {
  id          Int    @id @default(autoincrement())
  label       String
  href        String
  order_index Int?   @default(0)

  @@schema("public")
}

model sms_codes {
  phone      String    @id
  code       String?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  used       Boolean?  @default(false)
  expires_at DateTime? @db.Timestamptz(6)

  @@schema("public")
}

model static_pages {
  id          Int    @id @default(autoincrement())
  label       String
  href        String
  order_index Int?   @default(0)

  @@schema("public")
}

model store_settings {
  id                        Int       @id @default(autoincrement())
  order_acceptance_enabled  Boolean?  @default(false)
  banner_message            String?
  banner_active             Boolean?  @default(false)
  order_acceptance_schedule Json
  store_hours               Json
  updated_at                DateTime? @default(now()) @db.Timestamptz(6)

  @@index([id], map: "idx_store_settings_id")
  @@schema("public")
}

model subcategories {
  id                    Int                     @id @default(autoincrement())
  name                  String
  slug                  String                  @unique
  category_id           Int?
  label                 String?
  is_visible            Boolean?                @default(true)
  product_subcategories product_subcategories[]
  categories            categories?             @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_subcategories_category_id")

  @@index([category_id], map: "idx_subcategories_category_id")
  @@index([category_id], map: "idx_subcategories_category_id_fkey")
  @@index([id], map: "idx_subcategories_id")
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model upsell_items {
  id          String      @id
  title       String
  price       Int
  image_url   String
  category    String
  category_id Int?
  categories  categories? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_category")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_profiles {
  id              String            @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  bonus_balance   Int?              @default(0)
  created_at      DateTime?         @default(now()) @db.Timestamptz(6)
  phone           String?           @unique
  name            String?
  updated_at      DateTime?         @default(now()) @db.Timestamptz(6)
  email           String?
  birthday        String?
  anniversary     String?
  last_name       String?
  receive_offers  Boolean?          @default(false)
  important_dates important_dates[]
  orders          orders[]

  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}