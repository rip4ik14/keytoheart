// –ü—É—Ç—å: app/loyalty/page.tsx
"use client";

import Image from "next/image";
import { useState, useEffect } from "react";
import { supabasePublic as supabase } from "@/lib/supabase/public";
import { format } from "date-fns";
import ru from "date-fns/locale/ru";

/* --- SEO‚Äë–º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ --- */
export const metadata = {
  title: "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ ‚Ä¢ –¥–æ¬†15¬†% –±–æ–Ω—É—Å–∞–º–∏",
  description:
    "–ü–æ–ª—É—á–∞–π—Ç–µ –∫–µ—à–±—ç–∫ –¥–æ 15¬†% –∑–∞ –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ –Ω–∞ KeyToHeart –∏ –æ–ø–ª–∞—á–∏–≤–∞–π—Ç–µ –∏–º –¥–æ 15¬†% —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ–∫—É–ø–æ–∫.",
  openGraph: {
    images: "/og-cover.jpg",
  },
};
/* ------------------------------------------ */

export default function LoyaltyPage() {
  const [faqOpen, setFaqOpen] = useState<number | null>(null);
  const [formOpen, setFormOpen] = useState(false);
  const [formData, setFormData] = useState({ birthday: "", anniversary: "" });
  const [submitted, setSubmitted] = useState(false);
  const [loading, setLoading] = useState(false);
  const [userId, setUserId] = useState<string | null>(null);
  const [bonusBalance, setBonusBalance] = useState<number | null>(null);
  const [bonusHistory, setBonusHistory] = useState<
    { amount: number; reason: string; created_at: string }[]
  >([]);

  useEffect(() => {
    const fetchUserData = async () => {
      const {
        data: { user },
      } = await supabase.auth.getUser();
      if (!user) return;

      setUserId(user.id);

      // –ë–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–æ–≤
      const { data: profile } = await supabase
        .from("user_profiles")
        .select("bonus_balance")
        .eq("id", user.id)
        .single();
      if (profile?.bonus_balance != null) {
        setBonusBalance(profile.bonus_balance);
      }

      // –ò—Å—Ç–æ—Ä–∏—è –±–æ–Ω—É—Å–æ–≤
      const { data: history } = await supabase
        .from("bonus_history")
        .select("amount, reason, created_at")
        .eq("user_id", user.id)
        .order("created_at", { ascending: false });
      if (history) setBonusHistory(history);
    };

    fetchUserData();
  }, []);

  const handleSubmitDates = async () => {
    if (!userId) return;
    setLoading(true);

    await supabase.from("important_dates").insert([
      {
        user_id: userId,
        birthday: formData.birthday,
        anniversary: formData.anniversary,
      },
    ]);

    setSubmitted(true);
    setLoading(false);

    setTimeout(() => {
      setFormOpen(false);
      setFormData({ birthday: "", anniversary: "" });
      setSubmitted(false);
    }, 1500);
  };

  const faqs = [
    {
      question: "–ß—Ç–æ —Ç–∞–∫–æ–µ –∫–µ—à–±—ç–∫?",
      answer: "–ö–µ—à–±—ç–∫ ‚Äì —ç—Ç–æ –≤–æ–∑–≤—Ä–∞—Ç –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤ –Ω–∞ –ª–∏—á–Ω—ã–π —Å—á—ë—Ç. 1 –±–∞–ª–ª = 1 ‚ÇΩ.",
    },
    {
      question: "–ö–∞–∫ —Å—Ç–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã?",
      answer: "–í—ã —Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–∫–∞–∑–µ.",
    },
    { question: "–ì–¥–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∞–ª–ª—ã?", answer: "–í –∫–æ—Ä–∑–∏–Ω–µ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–∫–∞–∑–∞." },
    { question: "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–ª—ã –Ω–∞ –∫–∞—Å—Å–µ?", answer: "–ù–∞–∑–æ–≤–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞." },
    { question: "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –±–æ–Ω—É—Å–æ–≤?", answer: "6 –º–µ—Å—è—Ü–µ–≤ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–æ–∫—É–ø–∫–∏." },
  ];

  const levels = [
    { name: "–ë—Ä–æ–Ω–∑–æ–≤—ã–π", percent: "2.5%", threshold: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è" },
    { name: "–°–µ—Ä–µ–±—Ä—è–Ω—ã–π", percent: "5%", threshold: "–æ—Ç 10¬†000 ‚ÇΩ" },
    { name: "–ó–æ–ª–æ—Ç–æ–π", percent: "7.5%", threshold: "–æ—Ç 20¬†000 ‚ÇΩ" },
    { name: "–ü–ª–∞—Ç–∏–Ω–æ–≤—ã–π", percent: "10%", threshold: "–æ—Ç 30¬†000 ‚ÇΩ" },
    { name: "–ü—Ä–µ–º–∏—É–º", percent: "15%", threshold: "–æ—Ç 50¬†000 ‚ÇΩ" },
  ];

  return (
    <div className="max-w-5xl mx-auto px-4 py-10">
      {/* –ë–∞–ª–∞–Ω—Å */}
      {bonusBalance != null && (
        <div className="text-right text-sm text-gray-600 mb-4">
          –í–∞—à –±–æ–Ω—É—Å–Ω—ã–π –±–∞–ª–∞–Ω—Å:{" "}
          <span className="font-semibold">{bonusBalance} ‚ÇΩ</span>
        </div>
      )}

      {/* –ò—Å—Ç–æ—Ä–∏—è –±–æ–Ω—É—Å–æ–≤ */}
      {bonusHistory.length > 0 && (
        <section className="mb-10">
          <h2 className="text-xl font-semibold mb-4">–ò—Å—Ç–æ—Ä–∏—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π</h2>
          <div className="border rounded-xl overflow-hidden">
            <table className="w-full text-sm">
              <thead className="bg-gray-100 text-left">
                <tr>
                  <th className="p-2">–î–∞—Ç–∞</th>
                  <th className="p-2">–ü—Ä–∏—á–∏–Ω–∞</th>
                  <th className="p-2">–°—É–º–º–∞</th>
                </tr>
              </thead>
              <tbody>
                {bonusHistory.map((entry, idx) => (
                  <tr key={idx} className="border-t hover:bg-gray-50">
                    <td className="p-2">
                      {format(new Date(entry.created_at), "dd.MM.yyyy", { locale: ru })}
                    </td>
                    <td className="p-2">{entry.reason}</td>
                    <td className="p-2 text-green-600 font-medium">
                      {entry.amount > 0 ? `+${entry.amount}` : entry.amount} ‚ÇΩ
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </section>
      )}

      {/* –ë–∞–Ω–Ω–µ—Ä */}
      <div className="relative rounded-xl overflow-hidden mb-10 h-60 bg-black text-white flex items-center justify-center text-center">
        <Image
          src="/banner-loyalty.jpg"
          alt="–ë–∞–Ω–Ω–µ—Ä –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏"
          fill
          className="object-cover opacity-50"
        />
        <div className="relative z-10 space-y-2">
          <h1 className="text-3xl md:text-4xl font-bold">
            –í–µ—Ä–Ω—ë–º –¥–æ 15% –±–æ–Ω—É—Å–∞–º–∏!
          </h1>
          <p className="text-sm md:text-base">
            –ò –¥–∞—Ä–∏–º 300 –±–æ–Ω—É—Å–æ–≤ –∑–∞ –∫–∞—Ä—Ç—É –∫–ª–∏–µ–Ω—Ç–∞ –∏ –≤–∞–∂–Ω—ã–µ –¥–∞—Ç—ã üéÅ
          </p>
        </div>
      </div>

      {/* –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–µ—à–±—ç–∫ */}
      <section className="text-center mb-12">
        <h2 className="text-2xl font-bold mb-6">–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–µ—à–±—ç–∫</h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div className="bg-gray-100 p-6 rounded-xl shadow">
            <p>–°–æ–≤–µ—Ä—à–∏—Ç–µ –ø–æ–∫—É–ø–∫—É –Ω–∞ —Å–∞–π—Ç–µ –Ω–∞ –ª—é–±—É—é —Å—É–º–º—É</p>
          </div>
          <div className="bg-gray-100 p-6 rounded-xl shadow">
            <p>–° –∫–∞–∂–¥–æ–π –ø–æ–∫—É–ø–∫–∏ –º—ã –Ω–∞—á–∏—Å–ª–∏–º –∫–µ—à–±—ç–∫ –æ—Ç 2.5% –¥–æ 15%</p>
          </div>
          <div className="bg-gray-100 p-6 rounded-xl shadow">
            <p>–ü–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ –±–æ–Ω—É—Å–∞–º–∏ –º–æ–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å –¥–æ 15% –æ—Ç —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞</p>
          </div>
        </div>
      </section>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã */}
      <section className="text-center mb-12">
        <h2 className="text-2xl font-bold mb-6">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="border rounded-xl p-6 shadow hover:shadow-md transition">
            <h3 className="font-semibold text-lg mb-2">–ö–∞—Ä—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞</h3>
            <p className="text-sm mb-4">
              –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–∞—Ä—Ç—É –∏ –ø–æ–ª—É—á–∏—Ç–µ 300 –±–æ–Ω—É—Å–æ–≤. –î–æ—Å—Ç—É–ø–Ω–æ –≤ Apple Wallet –∏ Android.
            </p>
            <button className="border px-4 py-2 rounded-full text-sm hover:bg-black hover:text-white transition">
              –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
            </button>
          </div>
          <div className="border rounded-xl p-6 shadow hover:shadow-md transition">
            <h3 className="font-semibold text-lg mb-2">–í–∞–∂–Ω—ã–µ –¥–∞—Ç—ã</h3>
            <p className="text-sm mb-4">
              –£–∫–∞–∂–∏—Ç–µ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –∏ —é–±–∏–ª–µ–π ‚Äî –º—ã –Ω–∞–ø–æ–º–Ω–∏–º –∏ –ø–æ–¥–∞—Ä–∏–º —Å–∫–∏–¥–∫—É
            </p>
            <button
              onClick={() => setFormOpen(true)}
              className="border px-4 py-2 rounded-full text-sm hover:bg-black hover:text-white transition"
            >
              –ó–∞–ø–æ–ª–Ω–∏—Ç—å
            </button>
          </div>
        </div>

        {/* –ú–æ–¥–∞–ª–∫–∞ –¥–ª—è –≤–∞–∂–Ω—ã—Ö –¥–∞—Ç */}
        {formOpen && (
          <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50">
            <div className="bg-white p-6 rounded-xl shadow max-w-sm w-full">
              <h3 className="text-lg font-bold mb-4">–£–∫–∞–∂–∏—Ç–µ –≤–∞–∂–Ω—ã–µ –¥–∞—Ç—ã</h3>
              <label htmlFor="birthday" className="block mb-2 text-sm">
                –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è:
              </label>
              <input
                id="birthday"
                type="date"
                value={formData.birthday}
                onChange={(e) =>
                  setFormData((f) => ({ ...f, birthday: e.target.value }))
                }
                className="w-full mb-4 border px-3 py-2 rounded"
              />
              <label htmlFor="anniversary" className="block mb-2 text-sm">
                –Æ–±–∏–ª–µ–π:
              </label>
              <input
                id="anniversary"
                type="date"
                value={formData.anniversary}
                onChange={(e) =>
                  setFormData((f) => ({ ...f, anniversary: e.target.value }))
                }
                className="w-full mb-4 border px-3 py-2 rounded"
              />

              {submitted ? (
                <p className="text-green-600 text-sm mb-4">
                  –°–ø–∞—Å–∏–±–æ! –ú—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ –¥–∞—Ç—ã.
                </p>
              ) : (
                <button
                  onClick={handleSubmitDates}
                  disabled={loading}
                  className="bg-black text-white w-full py-2 rounded hover:opacity-90 transition"
                >
                  {loading ? "–°–æ—Ö—Ä–∞–Ω—è–µ–º..." : "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"}
                </button>
              )}

              <button
                onClick={() => setFormOpen(false)}
                className="mt-3 text-sm underline text-gray-600 hover:text-black"
              >
                –ó–∞–∫—Ä—ã—Ç—å
              </button>
            </div>
          </div>
        )}
      </section>

      {/* –£—Ä–æ–≤–Ω–∏ –∫–µ—à–±—ç–∫–∞ */}
      <section className="mb-12">
        <h2 className="text-2xl font-bold mb-4 text-center">–£—Ä–æ–≤–Ω–∏ –∫–µ—à–±—ç–∫–∞</h2>
        <div className="overflow-x-auto shadow rounded-xl">
          <table className="w-full border border-gray-300 text-sm">
            <thead className="bg-gray-100">
              <tr>
                <th className="p-2 text-left">–ù–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è</th>
                <th className="p-2 text-left">–ü—Ä–æ—Ü–µ–Ω—Ç</th>
                <th className="p-2 text-left">–°—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤</th>
              </tr>
            </thead>
            <tbody>
              {levels.map((lvl, idx) => (
                <tr key={idx} className="border-t hover:bg-gray-50">
                  <td className="p-2">{lvl.name}</td>
                  <td className="p-2">{lvl.percent}</td>
                  <td className="p-2">{lvl.threshold}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </section>

      {/* FAQ */}
      <section className="mb-12">
        <h2 className="text-2xl font-bold mb-4 text-center">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
        <div className="space-y-4">
          {faqs.map((faq, idx) => (
            <div
              key={idx}
              className="border-b pb-2 cursor-pointer"
              onClick={() => setFaqOpen(faqOpen === idx ? null : idx)}
            >
              <div className="flex justify-between items-center">
                <h3 className="font-medium text-lg">{faq.question}</h3>
                <span className="text-2xl">{faqOpen === idx ? "‚àí" : "+"}</span>
              </div>
              <div
                className={`overflow-hidden transition-all duration-300 ${
                  faqOpen === idx ? "max-h-40 mt-2" : "max-h-0"
                }`}
              >
                <p className="text-sm text-gray-600">{faq.answer}</p>
              </div>
            </div>
          ))}
        </div>
      </section>
    </div>
  );
}
